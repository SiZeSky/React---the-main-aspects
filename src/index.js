/*
-------------------------------Очистка формы от данных--------------------------------
Нам не особо нравиться, что после нажатия кнопки "добавить" наша форма не очищается. Следовательно, нужно добавить данную функцию. Для этого изменим тег <form>:
<form ref={(el) => this.myForm = el}>
Здесь нам нужно сделать ссылку (ref), которая будет ссылаться на всю нашу форму. Ее ключевое слово "ref" и в ее функции говорится следующее:
Данная функция принимает параметр el, в функции обращаемся к текущему классу, в нем мы сразу же создаем ссылку myForm и придаем ей текущее значение функции
А теперь привязываем нашу ссылку к кнопке и к ее обработчику событий, просто поверх других фигурных скобок в обработчике открываем еще одну, которая будет закрывать все скобки, и в ней пишем:
this.myForm.reset();
Здесь мы как бы обращаемся ко всей форме через ее ссылку и активируем метод reset, который удаляет все ее содержимое
------------------------------------Удаление записей----------------------------------
Создаем в App новый метод, разрешив ему также в конструкторе обращаться к состояниям
deleteUser(id) {
    
}
*/

import React from "react"
import * as ReactDOMClient from 'react-dom/client';
import App from './App'
import './css/main.css'

const app = ReactDOMClient.createRoot(document.getElementById("app"))

app.render(<App />)

